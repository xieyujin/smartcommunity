package com.bishe.smartcommunity.visitor.domain;

import org.springframework.stereotype.Repository;

import java.util.ArrayList;
import java.util.List;
@Repository
public class VisitorsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table visitors
     *
     * @mbg.generated Mon Mar 08 15:20:02 CST 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table visitors
     *
     * @mbg.generated Mon Mar 08 15:20:02 CST 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table visitors
     *
     * @mbg.generated Mon Mar 08 15:20:02 CST 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visitors
     *
     * @mbg.generated Mon Mar 08 15:20:02 CST 2021
     */
    public VisitorsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visitors
     *
     * @mbg.generated Mon Mar 08 15:20:02 CST 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visitors
     *
     * @mbg.generated Mon Mar 08 15:20:02 CST 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visitors
     *
     * @mbg.generated Mon Mar 08 15:20:02 CST 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visitors
     *
     * @mbg.generated Mon Mar 08 15:20:02 CST 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visitors
     *
     * @mbg.generated Mon Mar 08 15:20:02 CST 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visitors
     *
     * @mbg.generated Mon Mar 08 15:20:02 CST 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visitors
     *
     * @mbg.generated Mon Mar 08 15:20:02 CST 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visitors
     *
     * @mbg.generated Mon Mar 08 15:20:02 CST 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visitors
     *
     * @mbg.generated Mon Mar 08 15:20:02 CST 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table visitors
     *
     * @mbg.generated Mon Mar 08 15:20:02 CST 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table visitors
     *
     * @mbg.generated Mon Mar 08 15:20:02 CST 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andVisiteeIdIsNull() {
            addCriterion("visitee_id is null");
            return (Criteria) this;
        }

        public Criteria andVisiteeIdIsNotNull() {
            addCriterion("visitee_id is not null");
            return (Criteria) this;
        }

        public Criteria andVisiteeIdEqualTo(Integer value) {
            addCriterion("visitee_id =", value, "visiteeId");
            return (Criteria) this;
        }

        public Criteria andVisiteeIdNotEqualTo(Integer value) {
            addCriterion("visitee_id <>", value, "visiteeId");
            return (Criteria) this;
        }

        public Criteria andVisiteeIdGreaterThan(Integer value) {
            addCriterion("visitee_id >", value, "visiteeId");
            return (Criteria) this;
        }

        public Criteria andVisiteeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("visitee_id >=", value, "visiteeId");
            return (Criteria) this;
        }

        public Criteria andVisiteeIdLessThan(Integer value) {
            addCriterion("visitee_id <", value, "visiteeId");
            return (Criteria) this;
        }

        public Criteria andVisiteeIdLessThanOrEqualTo(Integer value) {
            addCriterion("visitee_id <=", value, "visiteeId");
            return (Criteria) this;
        }

        public Criteria andVisiteeIdIn(List<Integer> values) {
            addCriterion("visitee_id in", values, "visiteeId");
            return (Criteria) this;
        }

        public Criteria andVisiteeIdNotIn(List<Integer> values) {
            addCriterion("visitee_id not in", values, "visiteeId");
            return (Criteria) this;
        }

        public Criteria andVisiteeIdBetween(Integer value1, Integer value2) {
            addCriterion("visitee_id between", value1, value2, "visiteeId");
            return (Criteria) this;
        }

        public Criteria andVisiteeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("visitee_id not between", value1, value2, "visiteeId");
            return (Criteria) this;
        }

        public Criteria andVisitorIdIsNull() {
            addCriterion("visitor_id is null");
            return (Criteria) this;
        }

        public Criteria andVisitorIdIsNotNull() {
            addCriterion("visitor_id is not null");
            return (Criteria) this;
        }

        public Criteria andVisitorIdEqualTo(Integer value) {
            addCriterion("visitor_id =", value, "visitorId");
            return (Criteria) this;
        }

        public Criteria andVisitorIdNotEqualTo(Integer value) {
            addCriterion("visitor_id <>", value, "visitorId");
            return (Criteria) this;
        }

        public Criteria andVisitorIdGreaterThan(Integer value) {
            addCriterion("visitor_id >", value, "visitorId");
            return (Criteria) this;
        }

        public Criteria andVisitorIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("visitor_id >=", value, "visitorId");
            return (Criteria) this;
        }

        public Criteria andVisitorIdLessThan(Integer value) {
            addCriterion("visitor_id <", value, "visitorId");
            return (Criteria) this;
        }

        public Criteria andVisitorIdLessThanOrEqualTo(Integer value) {
            addCriterion("visitor_id <=", value, "visitorId");
            return (Criteria) this;
        }

        public Criteria andVisitorIdIn(List<Integer> values) {
            addCriterion("visitor_id in", values, "visitorId");
            return (Criteria) this;
        }

        public Criteria andVisitorIdNotIn(List<Integer> values) {
            addCriterion("visitor_id not in", values, "visitorId");
            return (Criteria) this;
        }

        public Criteria andVisitorIdBetween(Integer value1, Integer value2) {
            addCriterion("visitor_id between", value1, value2, "visitorId");
            return (Criteria) this;
        }

        public Criteria andVisitorIdNotBetween(Integer value1, Integer value2) {
            addCriterion("visitor_id not between", value1, value2, "visitorId");
            return (Criteria) this;
        }

        public Criteria andVisitorNameIsNull() {
            addCriterion("visitor_name is null");
            return (Criteria) this;
        }

        public Criteria andVisitorNameIsNotNull() {
            addCriterion("visitor_name is not null");
            return (Criteria) this;
        }

        public Criteria andVisitorNameEqualTo(String value) {
            addCriterion("visitor_name =", value, "visitorName");
            return (Criteria) this;
        }

        public Criteria andVisitorNameNotEqualTo(String value) {
            addCriterion("visitor_name <>", value, "visitorName");
            return (Criteria) this;
        }

        public Criteria andVisitorNameGreaterThan(String value) {
            addCriterion("visitor_name >", value, "visitorName");
            return (Criteria) this;
        }

        public Criteria andVisitorNameGreaterThanOrEqualTo(String value) {
            addCriterion("visitor_name >=", value, "visitorName");
            return (Criteria) this;
        }

        public Criteria andVisitorNameLessThan(String value) {
            addCriterion("visitor_name <", value, "visitorName");
            return (Criteria) this;
        }

        public Criteria andVisitorNameLessThanOrEqualTo(String value) {
            addCriterion("visitor_name <=", value, "visitorName");
            return (Criteria) this;
        }

        public Criteria andVisitorNameLike(String value) {
            addCriterion("visitor_name like", value, "visitorName");
            return (Criteria) this;
        }

        public Criteria andVisitorNameNotLike(String value) {
            addCriterion("visitor_name not like", value, "visitorName");
            return (Criteria) this;
        }

        public Criteria andVisitorNameIn(List<String> values) {
            addCriterion("visitor_name in", values, "visitorName");
            return (Criteria) this;
        }

        public Criteria andVisitorNameNotIn(List<String> values) {
            addCriterion("visitor_name not in", values, "visitorName");
            return (Criteria) this;
        }

        public Criteria andVisitorNameBetween(String value1, String value2) {
            addCriterion("visitor_name between", value1, value2, "visitorName");
            return (Criteria) this;
        }

        public Criteria andVisitorNameNotBetween(String value1, String value2) {
            addCriterion("visitor_name not between", value1, value2, "visitorName");
            return (Criteria) this;
        }

        public Criteria andVisitorStateIsNull() {
            addCriterion("visitor_state is null");
            return (Criteria) this;
        }

        public Criteria andVisitorStateIsNotNull() {
            addCriterion("visitor_state is not null");
            return (Criteria) this;
        }

        public Criteria andVisitorStateEqualTo(Integer value) {
            addCriterion("visitor_state =", value, "visitorState");
            return (Criteria) this;
        }

        public Criteria andVisitorStateNotEqualTo(Integer value) {
            addCriterion("visitor_state <>", value, "visitorState");
            return (Criteria) this;
        }

        public Criteria andVisitorStateGreaterThan(Integer value) {
            addCriterion("visitor_state >", value, "visitorState");
            return (Criteria) this;
        }

        public Criteria andVisitorStateGreaterThanOrEqualTo(Integer value) {
            addCriterion("visitor_state >=", value, "visitorState");
            return (Criteria) this;
        }

        public Criteria andVisitorStateLessThan(Integer value) {
            addCriterion("visitor_state <", value, "visitorState");
            return (Criteria) this;
        }

        public Criteria andVisitorStateLessThanOrEqualTo(Integer value) {
            addCriterion("visitor_state <=", value, "visitorState");
            return (Criteria) this;
        }

        public Criteria andVisitorStateIn(List<Integer> values) {
            addCriterion("visitor_state in", values, "visitorState");
            return (Criteria) this;
        }

        public Criteria andVisitorStateNotIn(List<Integer> values) {
            addCriterion("visitor_state not in", values, "visitorState");
            return (Criteria) this;
        }

        public Criteria andVisitorStateBetween(Integer value1, Integer value2) {
            addCriterion("visitor_state between", value1, value2, "visitorState");
            return (Criteria) this;
        }

        public Criteria andVisitorStateNotBetween(Integer value1, Integer value2) {
            addCriterion("visitor_state not between", value1, value2, "visitorState");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table visitors
     *
     * @mbg.generated do_not_delete_during_merge Mon Mar 08 15:20:02 CST 2021
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table visitors
     *
     * @mbg.generated Mon Mar 08 15:20:02 CST 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}